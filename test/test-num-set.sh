#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of German-Num.
# 
# German-Num is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# German-Num is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with German-Num.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ gen-test -T num-set
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L num-set.old <(echo \
'$ test -x ./calc
$ num-set() { [[ "$1" == [12] ]] && cut -d $'\''\t'\'' -f$1 num-set.txt; }
$ diff -u0 <(num-set 1) <(num-set 2|./calc -iVN 2>&1)|ssed 1,3d
-1000000000
-2000000000
-1000000000000
-2000000000000
-1000000000000000
-2000000000000000
+calc: parse error:57:6: expected token "Million" but got "Milliarde"
+calc: parse error:57:6: eine Milliarde
+calc: parse error:57:6:      ^
+calc: parse error:58:6: expected token EON but got "Milliarden"
+calc: parse error:58:6: zwei Milliarden
+calc: parse error:58:6:      ^
+calc: parse error:59:6: expected token "Million" but got "Billion"
+calc: parse error:59:6: eine Billion
+calc: parse error:59:6:      ^
+calc: parse error:60:6: expected token EON but got "Billionen"
+calc: parse error:60:6: zwei Billionen
+calc: parse error:60:6:      ^
+calc: parse error:61:6: expected token "Million" but got "Billiarde"
+calc: parse error:61:6: eine Billiarde
+calc: parse error:61:6:      ^
+calc: parse error:62:6: expected token EON but got "Billiarden"
+calc: parse error:62:6: zwei Billiarden
+calc: parse error:62:6:      ^'
) -L num-set.new <(
echo '$ test -x ./calc'
test -x ./calc 2>&1 ||
echo 'command failed: test -x ./calc'

echo '$ num-set() { [[ "$1" == [12] ]] && cut -d $'\''\t'\'' -f$1 num-set.txt; }'
num-set() { [[ "$1" == [12] ]] && cut -d $'\t' -f$1 num-set.txt; } 2>&1 ||
echo 'command failed: num-set() { [[ "$1" == [12] ]] && cut -d $'\''\t'\'' -f$1 num-set.txt; }'

echo '$ diff -u0 <(num-set 1) <(num-set 2|./calc -iVN 2>&1)|ssed 1,3d'
diff -u0 <(num-set 1) <(num-set 2|./calc -iVN 2>&1)|ssed 1,3d 2>&1 ||
echo 'command failed: diff -u0 <(num-set 1) <(num-set 2|./calc -iVN 2>&1)|ssed 1,3d'
)

